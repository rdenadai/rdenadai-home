# base-image for python on any machine using a template variable,
# see more about dockerfile templates here:http://docs.resin.io/pages/deployment/docker-templates
FROM resin/%%RESIN_MACHINE_NAME%%-python

# use apt-get if you need to install dependencies,
# for instance if you need ALSA sound utils, just uncomment the lines below.
# RUN apt-get update && apt-get install -yq \
#    alsa-utils libasound2-dev && \
#    apt-get clean && rm -rf /var/lib/apt/lists/*

RUN apt-get update

RUN apt-get install -y gcc sqlite3 libsqlite3-dev python3-dev

# Python build dependencies
RUN apt-get install -y \
    libmemcached-dev \
    zlib1g-dev \
    libssl-dev \
    python-dev \
    build-essential \
    libsqlite3-dev \
    libbz2-dev \
    libreadline6 \
    libreadline6-dev \
# pyenv dependencies
    git

### PYENV ###
ENV HOME /root
ENV PYENV_ROOT $HOME/.pyenv
ENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH
# see https://github.com/yyuu/pyenv-installer
RUN curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash
RUN pyenv install 3.6.2
RUN pyenv global 3.6.2
RUN pyenv local 3.6.2
RUN pyenv rehash
RUN echo 'export PYENV_ROOT="$HOME/.pyenv"' >> /root/.bash_profile
RUN echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> /etc/.bash_profile
RUN echo 'eval "$(pyenv init -)"' >> /etc/.bash_profile

RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Set our working directory
WORKDIR /usr/src/app

# Copy requirements.txt first for better cache on later pushes
COPY ./requirements.txt /requirements.txt

# pip install python deps from requirements.txt on the resin.io build server
RUN pip install -r /requirements.txt

# This will copy all files in our root to the working  directory in the container
COPY . ./

# switch on systemd init system in container
ENV INITSYSTEM on

CMD modprobe i2c-dev
CMD modprobe bcm2835-v4l2

# main.py will run when container starts up on the device
CMD ["python", "main.py"]
CMD ["bash", "main.sh"]